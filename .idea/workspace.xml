<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="db8d27a0-4399-4dc1-bf27-6cfa324c1679" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/protoc-gen-tinyrpc/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///opt/homebrew/Cellar/go@1.17/1.17.13/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2JncVZ6UMgAhBPc0LQBHM6WlOSj" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RunManager" selected="Go Test.TestProtoSerializer_Unmarshal in tinyrpc/serializer">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="tinyrpc" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build tinyrpc" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="tinyrpc" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="TestProtoSerializer_Marshal in tinyrpc/serializer" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tinyrpc" />
      <working_directory value="$PROJECT_DIR$/serializer" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="tinyrpc/serializer" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestProtoSerializer_Marshal\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestProtoSerializer_Unmarshal in tinyrpc/serializer" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tinyrpc" />
      <working_directory value="$PROJECT_DIR$/serializer" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="tinyrpc/serializer" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestProtoSerializer_Unmarshal\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRequestHeader_GetCompressType in tinyrpc/header" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tinyrpc" />
      <working_directory value="$PROJECT_DIR$/header" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="tinyrpc/header" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRequestHeader_GetCompressType\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestResponseHeader_GetCompressType in tinyrpc/header" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tinyrpc" />
      <working_directory value="$PROJECT_DIR$/header" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="tinyrpc/header" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestResponseHeader_GetCompressType\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestResponseHeader_ResetHeader in tinyrpc/header" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tinyrpc" />
      <working_directory value="$PROJECT_DIR$/header" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="tinyrpc/header" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestResponseHeader_ResetHeader\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="tinyrpc" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build tinyrpc" />
      <item itemvalue="Go Test.TestRequestHeader_GetCompressType in tinyrpc/header" />
      <item itemvalue="Go Test.TestResponseHeader_ResetHeader in tinyrpc/header" />
      <item itemvalue="Go Test.TestResponseHeader_GetCompressType in tinyrpc/header" />
      <item itemvalue="Go Test.TestProtoSerializer_Marshal in tinyrpc/serializer" />
      <item itemvalue="Go Test.TestProtoSerializer_Unmarshal in tinyrpc/serializer" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestProtoSerializer_Unmarshal in tinyrpc/serializer" />
        <item itemvalue="Go Test.TestProtoSerializer_Marshal in tinyrpc/serializer" />
        <item itemvalue="Go Test.TestResponseHeader_GetCompressType in tinyrpc/header" />
        <item itemvalue="Go Test.TestResponseHeader_ResetHeader in tinyrpc/header" />
        <item itemvalue="Go Test.TestRequestHeader_GetCompressType in tinyrpc/header" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>